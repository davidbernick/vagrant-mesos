# -*- mode: ruby -*-
# vi: set ft=ruby :
# vagrant plugins required:
# vagrant-berkshelf, vagrant-omnibus, vagrant-hosts
require 'yaml'
mesos_version = "0.19.0"

Vagrant.configure("2") do |config|

  # enable plugins
  config.berkshelf.enabled = true
  config.omnibus.chef_version = :latest

  # if you want to use vagrant-cachier,
  # please install vagrant-cachier plugin.
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.enable :apt
    config.cache.enable :chef
  end

  config.vm.provider :virtualbox do |vb, override|
    override.vm.box = "Ubuntu 14.04"
    override.vm.box_url = "https://oss-binaries.phusionpassenger.com/vagrant/boxes/latest/ubuntu-14.04-amd64-vbox.box"
    vb.name = 'vagrant-mesos-standalone'

    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "#{1024*2}"]
    vb.customize ["modifyvm", :id,  "--cpus",  "2"]

    # please customize hostname and private ip configuration if you needed.
    override.vm.hostname = "mesos"
    private_ip = "192.168.33.10"
    override.vm.network :private_network, ip: private_ip
    override.vm.provision :hosts do |provisioner|
      provisioner.add_host private_ip , [ config.vm.hostname ]
    end

    # for mesos web UI.
    override.vm.network :forwarded_port, guest: 5050, host: 5050
    # for Marathon Web UI
    override.vm.network :forwarded_port, guest: 8080, host: 8080

    override.vm.provision :shell do |s|
      s.path = "scripts/populate_sshkey.sh"
      s.args = "/home/vagrant vagrant"
    end
  end

  ami = YAML.load_file('scripts/aws_region_ami.yaml')
  conf = YAML.load_file('aws_config.yaml')
  config.vm.provider :aws do |aws, override|
    override.vm.box = "dummy"
    override.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    aws.access_key_id = conf["access_key_id"]
    aws.secret_access_key = conf["secret_access_key"]

    aws.region = conf["region"]
    aws.ami = ami[conf["region"]]
    aws.instance_type = conf["instance_type"]
    aws.keypair_name = conf["keypair_name"]
    aws.security_groups = conf["security_groups"]
    aws.tags = {
      Name: 'vagrant-mesos-standalone'
    }

    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = conf["ssh_private_key_path"]
    override.vm.provision :shell do |s|
      s.path = "scripts/populate_sshkey.sh"
      s.args = "/home/ubuntu ubuntu"
    end
  end

  config.vm.provision :chef_solo do |chef|
    # chef.log_level = :debug
    chef.add_recipe "apt"
    chef.add_recipe "mesos"
    chef.add_recipe "mesos::master"
    chef.add_recipe "mesos::slave"
    chef.add_recipe "docker::aufs"
    chef.add_recipe "docker::lxc"
    chef.add_recipe "docker"
    chef.add_recipe "mesos::docker-executor"

    # You may also specify custom JSON attributes:
    chef.json = {
      :mesos => {
        :type         => "mesosphere",
        :version      => mesos_version,
        :mesosphere   => {
          :with_zookeeper => true
        },
        :master_ips => ["localhost"],
        :slave_ips  => ["localhost"],
        :master => {
          :cluster => "MyCluster",
          :quorum  => "1",
          :zk      => "zk://localhost:2181/mesos"
        },
        :slave =>{
          :master => "zk://localhost:2181/mesos",
          :isolation => "process"
        }
      }
    }
  end

  if "#{mesos_version}" >= "0.19.0"
    marathon_version = "marathon-0.6.0"
  elsif "#{mesos_version}" >= "0.17.0"
    marathon_version = "marathon-0.5.1"
  else
    marathon_version = "marathon-0.5.1_mesos-0.16.0"
  end
  marathon_download_url = "http://downloads.mesosphere.io/marathon/#{marathon_version}/#{marathon_version}.tgz"
  config.vm.provision :shell, :inline => <<SCRIPT
        apt-get -y install default-jre-headless unzip curl libcurl3
        if [ ! -e /tmp/marathon.tgz ]; then
          curl -sSfL #{marathon_download_url} --output /tmp/marathon.tgz
          mkdir -p /opt && cd /opt && tar xzf /tmp/marathon.tgz
        fi
        kill -KILL `ps augwx | grep marathon | tr -s " " | cut -d' ' -f2`
        nohup /opt/#{marathon_version}/bin/start --master zk://localhost:2181/mesos --zk_hosts localhost:2181 > /opt/#{marathon_version}/nohup.log 2> /opt/#{marathon_version}/nohup.log < /dev/null &
SCRIPT

end
